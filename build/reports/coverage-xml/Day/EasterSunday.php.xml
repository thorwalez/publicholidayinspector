<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="EasterSunday.php" path="/Day">
    <totals>
      <lines total="83" comments="31" code="52" executable="15" executed="15" percent="100.00"/>
      <methods count="4" tested="4" percent="100.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="1" percent="100.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="PublicHolidayInspector\Day\EasterSunday" start="21" executable="15" executed="15" crap="4">
      <package full="PublicHolidayInspector" name="PublicHolidayInspector" sub="" category=""/>
      <namespace name="PublicHolidayInspector\Day"/>
      <method name="__construct" signature="__construct(\DateTime $date)" start="41" end="46" crap="1" executable="4" executed="4" coverage="100"/>
      <method name="getDay" signature="getDay(int $factor)" start="52" end="65" crap="1" executable="9" executed="9" coverage="100"/>
      <method name="equals" signature="equals($changeDate)" start="71" end="74" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="__toString" signature="__toString()" start="79" end="82" crap="1" executable="1" executed="1" coverage="100"/>
    </class>
    <coverage>
      <line nr="43">
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testFixPublicHolidayNewYear"/>
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testInvokeCreater"/>
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testFixPublicHolidayDoGU"/>
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testDynamicPublicHolidayDoPaRWithGermanState"/>
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testDynamicPublicHolidayDoPaRWithOutGermanState"/>
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testFixPublicHolidayMartinsDayWithOutAustriaState"/>
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testFixPublicHolidayMartinsDayWithAustriaState"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorWorkingDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorEasterSunday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorEasterMonday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorWhitSunday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorWhitMonday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorAscensionDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorCorpusChristi"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorThreeHolyKings"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorMaryAscension"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorAllSaintsDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorChristmasEve"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorFirstChristmansDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorSecondChristmansDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorMaryConception"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorNewYear"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorLeopoldiDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorMartinsDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorNationalHoliday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorStaatHoliday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorDayOfReferendum"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorRubert"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorFlorian"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorJosef"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testDateIsNull"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorWorkingDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorGoodFriday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorEasterSunday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorEasterMonday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorWhitSunday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorWhitMonday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorAscensionDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorCorpusChristi"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorLaborDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorChristmasEve"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorNewYear"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorThreeHolyKings"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorMaryAscension"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorDayOfGermanUnity"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorReformationDayOrHalloween"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorAllSaintsDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorDayOfPrayerAndRepentance"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorFirstChristmansDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorSecondChristmansDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorNewYearsEve"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testDateIsNull"/>
        <covered by="Test\PublicHolidayInspector\Service\UltimoDayCalculatorServiceTest::testUltimoFebruaryNoLeapYear"/>
        <covered by="Test\PublicHolidayInspector\Service\UltimoDayCalculatorServiceTest::testUltimoFebruaryLeapYear"/>
        <covered by="Test\PublicHolidayInspector\Service\UltimoDayCalculatorServiceTest::testNoUltimoDayFromDecemberForAustria"/>
        <covered by="Test\PublicHolidayInspector\Service\UltimoDayCalculatorServiceTest::testTwoDaysForLastDayOfMonth"/>
        <covered by="Test\PublicHolidayInspector\Service\UltimoDayCalculatorServiceTest::testThreeDaysForLastDayOfMonthThrowsException"/>
        <covered by="Test\PublicHolidayInspector\Validator\LastDayValidatorTest::testDayIsWorkingDay"/>
        <covered by="Test\PublicHolidayInspector\Validator\LastDayValidatorTest::testDayIsNotWorkingDay"/>
        <covered by="Test\PublicHolidayInspector\Validator\LastDayValidatorTest::testFindTheLastValidDayFromMonth"/>
        <covered by="Test\PublicHolidayInspector\Validator\LastDayValidatorTest::testFindTheLastValidDayFromMonthMayAtNRW"/>
        <covered by="Test\PublicHolidayInspector\Validator\LastDayValidatorTest::testNotTheLastDayFromMonth"/>
        <covered by="Test\PublicHolidayInspector\Validator\LastDayValidatorTest::testSpecialCases"/>
      </line>
      <line nr="44">
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testFixPublicHolidayNewYear"/>
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testInvokeCreater"/>
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testFixPublicHolidayDoGU"/>
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testDynamicPublicHolidayDoPaRWithGermanState"/>
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testDynamicPublicHolidayDoPaRWithOutGermanState"/>
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testFixPublicHolidayMartinsDayWithOutAustriaState"/>
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testFixPublicHolidayMartinsDayWithAustriaState"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorWorkingDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorEasterSunday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorEasterMonday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorWhitSunday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorWhitMonday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorAscensionDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorCorpusChristi"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorThreeHolyKings"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorMaryAscension"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorAllSaintsDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorChristmasEve"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorFirstChristmansDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorSecondChristmansDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorMaryConception"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorNewYear"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorLeopoldiDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorMartinsDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorNationalHoliday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorStaatHoliday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorDayOfReferendum"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorRubert"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorFlorian"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorJosef"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testDateIsNull"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorWorkingDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorGoodFriday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorEasterSunday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorEasterMonday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorWhitSunday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorWhitMonday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorAscensionDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorCorpusChristi"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorLaborDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorChristmasEve"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorNewYear"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorThreeHolyKings"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorMaryAscension"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorDayOfGermanUnity"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorReformationDayOrHalloween"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorAllSaintsDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorDayOfPrayerAndRepentance"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorFirstChristmansDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorSecondChristmansDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorNewYearsEve"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testDateIsNull"/>
        <covered by="Test\PublicHolidayInspector\Service\UltimoDayCalculatorServiceTest::testUltimoFebruaryNoLeapYear"/>
        <covered by="Test\PublicHolidayInspector\Service\UltimoDayCalculatorServiceTest::testUltimoFebruaryLeapYear"/>
        <covered by="Test\PublicHolidayInspector\Service\UltimoDayCalculatorServiceTest::testNoUltimoDayFromDecemberForAustria"/>
        <covered by="Test\PublicHolidayInspector\Service\UltimoDayCalculatorServiceTest::testTwoDaysForLastDayOfMonth"/>
        <covered by="Test\PublicHolidayInspector\Service\UltimoDayCalculatorServiceTest::testThreeDaysForLastDayOfMonthThrowsException"/>
        <covered by="Test\PublicHolidayInspector\Validator\LastDayValidatorTest::testDayIsWorkingDay"/>
        <covered by="Test\PublicHolidayInspector\Validator\LastDayValidatorTest::testDayIsNotWorkingDay"/>
        <covered by="Test\PublicHolidayInspector\Validator\LastDayValidatorTest::testFindTheLastValidDayFromMonth"/>
        <covered by="Test\PublicHolidayInspector\Validator\LastDayValidatorTest::testFindTheLastValidDayFromMonthMayAtNRW"/>
        <covered by="Test\PublicHolidayInspector\Validator\LastDayValidatorTest::testNotTheLastDayFromMonth"/>
        <covered by="Test\PublicHolidayInspector\Validator\LastDayValidatorTest::testSpecialCases"/>
      </line>
      <line nr="45">
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testFixPublicHolidayNewYear"/>
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testInvokeCreater"/>
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testFixPublicHolidayDoGU"/>
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testDynamicPublicHolidayDoPaRWithGermanState"/>
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testDynamicPublicHolidayDoPaRWithOutGermanState"/>
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testFixPublicHolidayMartinsDayWithOutAustriaState"/>
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testFixPublicHolidayMartinsDayWithAustriaState"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorWorkingDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorEasterSunday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorEasterMonday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorWhitSunday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorWhitMonday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorAscensionDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorCorpusChristi"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorThreeHolyKings"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorMaryAscension"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorAllSaintsDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorChristmasEve"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorFirstChristmansDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorSecondChristmansDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorMaryConception"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorNewYear"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorLeopoldiDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorMartinsDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorNationalHoliday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorStaatHoliday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorDayOfReferendum"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorRubert"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorFlorian"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorJosef"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testDateIsNull"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorWorkingDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorGoodFriday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorEasterSunday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorEasterMonday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorWhitSunday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorWhitMonday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorAscensionDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorCorpusChristi"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorLaborDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorChristmasEve"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorNewYear"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorThreeHolyKings"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorMaryAscension"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorDayOfGermanUnity"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorReformationDayOrHalloween"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorAllSaintsDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorDayOfPrayerAndRepentance"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorFirstChristmansDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorSecondChristmansDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorNewYearsEve"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testDateIsNull"/>
        <covered by="Test\PublicHolidayInspector\Service\UltimoDayCalculatorServiceTest::testUltimoFebruaryNoLeapYear"/>
        <covered by="Test\PublicHolidayInspector\Service\UltimoDayCalculatorServiceTest::testUltimoFebruaryLeapYear"/>
        <covered by="Test\PublicHolidayInspector\Service\UltimoDayCalculatorServiceTest::testNoUltimoDayFromDecemberForAustria"/>
        <covered by="Test\PublicHolidayInspector\Service\UltimoDayCalculatorServiceTest::testTwoDaysForLastDayOfMonth"/>
        <covered by="Test\PublicHolidayInspector\Service\UltimoDayCalculatorServiceTest::testThreeDaysForLastDayOfMonthThrowsException"/>
        <covered by="Test\PublicHolidayInspector\Validator\LastDayValidatorTest::testDayIsWorkingDay"/>
        <covered by="Test\PublicHolidayInspector\Validator\LastDayValidatorTest::testDayIsNotWorkingDay"/>
        <covered by="Test\PublicHolidayInspector\Validator\LastDayValidatorTest::testFindTheLastValidDayFromMonth"/>
        <covered by="Test\PublicHolidayInspector\Validator\LastDayValidatorTest::testFindTheLastValidDayFromMonthMayAtNRW"/>
        <covered by="Test\PublicHolidayInspector\Validator\LastDayValidatorTest::testNotTheLastDayFromMonth"/>
        <covered by="Test\PublicHolidayInspector\Validator\LastDayValidatorTest::testSpecialCases"/>
      </line>
      <line nr="46">
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testFixPublicHolidayNewYear"/>
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testInvokeCreater"/>
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testFixPublicHolidayDoGU"/>
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testDynamicPublicHolidayDoPaRWithGermanState"/>
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testDynamicPublicHolidayDoPaRWithOutGermanState"/>
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testFixPublicHolidayMartinsDayWithOutAustriaState"/>
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testFixPublicHolidayMartinsDayWithAustriaState"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorWorkingDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorEasterSunday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorEasterMonday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorWhitSunday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorWhitMonday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorAscensionDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorCorpusChristi"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorThreeHolyKings"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorMaryAscension"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorAllSaintsDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorChristmasEve"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorFirstChristmansDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorSecondChristmansDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorMaryConception"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorNewYear"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorLeopoldiDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorMartinsDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorNationalHoliday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorStaatHoliday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorDayOfReferendum"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorRubert"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorFlorian"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorJosef"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testDateIsNull"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorWorkingDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorGoodFriday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorEasterSunday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorEasterMonday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorWhitSunday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorWhitMonday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorAscensionDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorCorpusChristi"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorLaborDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorChristmasEve"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorNewYear"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorThreeHolyKings"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorMaryAscension"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorDayOfGermanUnity"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorReformationDayOrHalloween"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorAllSaintsDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorDayOfPrayerAndRepentance"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorFirstChristmansDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorSecondChristmansDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorNewYearsEve"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testDateIsNull"/>
        <covered by="Test\PublicHolidayInspector\Service\UltimoDayCalculatorServiceTest::testUltimoFebruaryNoLeapYear"/>
        <covered by="Test\PublicHolidayInspector\Service\UltimoDayCalculatorServiceTest::testUltimoFebruaryLeapYear"/>
        <covered by="Test\PublicHolidayInspector\Service\UltimoDayCalculatorServiceTest::testNoUltimoDayFromDecemberForAustria"/>
        <covered by="Test\PublicHolidayInspector\Service\UltimoDayCalculatorServiceTest::testTwoDaysForLastDayOfMonth"/>
        <covered by="Test\PublicHolidayInspector\Service\UltimoDayCalculatorServiceTest::testThreeDaysForLastDayOfMonthThrowsException"/>
        <covered by="Test\PublicHolidayInspector\Validator\LastDayValidatorTest::testDayIsWorkingDay"/>
        <covered by="Test\PublicHolidayInspector\Validator\LastDayValidatorTest::testDayIsNotWorkingDay"/>
        <covered by="Test\PublicHolidayInspector\Validator\LastDayValidatorTest::testFindTheLastValidDayFromMonth"/>
        <covered by="Test\PublicHolidayInspector\Validator\LastDayValidatorTest::testFindTheLastValidDayFromMonthMayAtNRW"/>
        <covered by="Test\PublicHolidayInspector\Validator\LastDayValidatorTest::testNotTheLastDayFromMonth"/>
        <covered by="Test\PublicHolidayInspector\Validator\LastDayValidatorTest::testSpecialCases"/>
      </line>
      <line nr="54">
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testFixPublicHolidayNewYear"/>
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testInvokeCreater"/>
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testFixPublicHolidayDoGU"/>
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testDynamicPublicHolidayDoPaRWithGermanState"/>
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testDynamicPublicHolidayDoPaRWithOutGermanState"/>
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testFixPublicHolidayMartinsDayWithOutAustriaState"/>
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testFixPublicHolidayMartinsDayWithAustriaState"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorWorkingDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorEasterSunday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorEasterMonday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorWhitSunday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorWhitMonday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorAscensionDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorCorpusChristi"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorThreeHolyKings"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorMaryAscension"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorAllSaintsDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorChristmasEve"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorFirstChristmansDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorSecondChristmansDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorMaryConception"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorNewYear"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorLeopoldiDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorMartinsDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorNationalHoliday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorStaatHoliday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorDayOfReferendum"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorRubert"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorFlorian"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorJosef"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testDateIsNull"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorWorkingDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorGoodFriday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorEasterSunday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorEasterMonday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorWhitSunday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorWhitMonday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorAscensionDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorCorpusChristi"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorLaborDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorChristmasEve"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorNewYear"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorThreeHolyKings"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorMaryAscension"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorDayOfGermanUnity"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorReformationDayOrHalloween"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorDayOfPrayerAndRepentance"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorFirstChristmansDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorSecondChristmansDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorNewYearsEve"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testDateIsNull"/>
        <covered by="Test\PublicHolidayInspector\Service\UltimoDayCalculatorServiceTest::testUltimoFebruaryNoLeapYear"/>
        <covered by="Test\PublicHolidayInspector\Service\UltimoDayCalculatorServiceTest::testUltimoFebruaryLeapYear"/>
        <covered by="Test\PublicHolidayInspector\Service\UltimoDayCalculatorServiceTest::testNoUltimoDayFromDecemberForAustria"/>
        <covered by="Test\PublicHolidayInspector\Service\UltimoDayCalculatorServiceTest::testTwoDaysForLastDayOfMonth"/>
        <covered by="Test\PublicHolidayInspector\Service\UltimoDayCalculatorServiceTest::testThreeDaysForLastDayOfMonthThrowsException"/>
        <covered by="Test\PublicHolidayInspector\Validator\LastDayValidatorTest::testDayIsWorkingDay"/>
        <covered by="Test\PublicHolidayInspector\Validator\LastDayValidatorTest::testDayIsNotWorkingDay"/>
        <covered by="Test\PublicHolidayInspector\Validator\LastDayValidatorTest::testFindTheLastValidDayFromMonth"/>
        <covered by="Test\PublicHolidayInspector\Validator\LastDayValidatorTest::testFindTheLastValidDayFromMonthMayAtNRW"/>
        <covered by="Test\PublicHolidayInspector\Validator\LastDayValidatorTest::testNotTheLastDayFromMonth"/>
        <covered by="Test\PublicHolidayInspector\Validator\LastDayValidatorTest::testSpecialCases"/>
      </line>
      <line nr="55">
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testFixPublicHolidayNewYear"/>
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testInvokeCreater"/>
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testFixPublicHolidayDoGU"/>
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testDynamicPublicHolidayDoPaRWithGermanState"/>
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testDynamicPublicHolidayDoPaRWithOutGermanState"/>
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testFixPublicHolidayMartinsDayWithOutAustriaState"/>
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testFixPublicHolidayMartinsDayWithAustriaState"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorWorkingDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorEasterSunday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorEasterMonday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorWhitSunday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorWhitMonday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorAscensionDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorCorpusChristi"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorThreeHolyKings"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorMaryAscension"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorAllSaintsDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorChristmasEve"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorFirstChristmansDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorSecondChristmansDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorMaryConception"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorNewYear"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorLeopoldiDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorMartinsDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorNationalHoliday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorStaatHoliday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorDayOfReferendum"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorRubert"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorFlorian"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorJosef"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testDateIsNull"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorWorkingDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorGoodFriday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorEasterSunday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorEasterMonday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorWhitSunday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorWhitMonday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorAscensionDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorCorpusChristi"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorLaborDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorChristmasEve"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorNewYear"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorThreeHolyKings"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorMaryAscension"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorDayOfGermanUnity"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorReformationDayOrHalloween"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorDayOfPrayerAndRepentance"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorFirstChristmansDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorSecondChristmansDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorNewYearsEve"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testDateIsNull"/>
        <covered by="Test\PublicHolidayInspector\Service\UltimoDayCalculatorServiceTest::testUltimoFebruaryNoLeapYear"/>
        <covered by="Test\PublicHolidayInspector\Service\UltimoDayCalculatorServiceTest::testUltimoFebruaryLeapYear"/>
        <covered by="Test\PublicHolidayInspector\Service\UltimoDayCalculatorServiceTest::testNoUltimoDayFromDecemberForAustria"/>
        <covered by="Test\PublicHolidayInspector\Service\UltimoDayCalculatorServiceTest::testTwoDaysForLastDayOfMonth"/>
        <covered by="Test\PublicHolidayInspector\Service\UltimoDayCalculatorServiceTest::testThreeDaysForLastDayOfMonthThrowsException"/>
        <covered by="Test\PublicHolidayInspector\Validator\LastDayValidatorTest::testDayIsWorkingDay"/>
        <covered by="Test\PublicHolidayInspector\Validator\LastDayValidatorTest::testDayIsNotWorkingDay"/>
        <covered by="Test\PublicHolidayInspector\Validator\LastDayValidatorTest::testFindTheLastValidDayFromMonth"/>
        <covered by="Test\PublicHolidayInspector\Validator\LastDayValidatorTest::testFindTheLastValidDayFromMonthMayAtNRW"/>
        <covered by="Test\PublicHolidayInspector\Validator\LastDayValidatorTest::testNotTheLastDayFromMonth"/>
        <covered by="Test\PublicHolidayInspector\Validator\LastDayValidatorTest::testSpecialCases"/>
      </line>
      <line nr="56">
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testFixPublicHolidayNewYear"/>
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testInvokeCreater"/>
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testFixPublicHolidayDoGU"/>
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testDynamicPublicHolidayDoPaRWithGermanState"/>
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testDynamicPublicHolidayDoPaRWithOutGermanState"/>
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testFixPublicHolidayMartinsDayWithOutAustriaState"/>
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testFixPublicHolidayMartinsDayWithAustriaState"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorWorkingDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorEasterSunday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorEasterMonday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorWhitSunday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorWhitMonday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorAscensionDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorCorpusChristi"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorThreeHolyKings"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorMaryAscension"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorAllSaintsDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorChristmasEve"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorFirstChristmansDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorSecondChristmansDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorMaryConception"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorNewYear"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorLeopoldiDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorMartinsDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorNationalHoliday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorStaatHoliday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorDayOfReferendum"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorRubert"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorFlorian"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorJosef"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testDateIsNull"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorWorkingDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorGoodFriday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorEasterSunday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorEasterMonday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorWhitSunday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorWhitMonday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorAscensionDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorCorpusChristi"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorLaborDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorChristmasEve"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorNewYear"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorThreeHolyKings"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorMaryAscension"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorDayOfGermanUnity"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorReformationDayOrHalloween"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorDayOfPrayerAndRepentance"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorFirstChristmansDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorSecondChristmansDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorNewYearsEve"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testDateIsNull"/>
        <covered by="Test\PublicHolidayInspector\Service\UltimoDayCalculatorServiceTest::testUltimoFebruaryNoLeapYear"/>
        <covered by="Test\PublicHolidayInspector\Service\UltimoDayCalculatorServiceTest::testUltimoFebruaryLeapYear"/>
        <covered by="Test\PublicHolidayInspector\Service\UltimoDayCalculatorServiceTest::testNoUltimoDayFromDecemberForAustria"/>
        <covered by="Test\PublicHolidayInspector\Service\UltimoDayCalculatorServiceTest::testTwoDaysForLastDayOfMonth"/>
        <covered by="Test\PublicHolidayInspector\Service\UltimoDayCalculatorServiceTest::testThreeDaysForLastDayOfMonthThrowsException"/>
        <covered by="Test\PublicHolidayInspector\Validator\LastDayValidatorTest::testDayIsWorkingDay"/>
        <covered by="Test\PublicHolidayInspector\Validator\LastDayValidatorTest::testDayIsNotWorkingDay"/>
        <covered by="Test\PublicHolidayInspector\Validator\LastDayValidatorTest::testFindTheLastValidDayFromMonth"/>
        <covered by="Test\PublicHolidayInspector\Validator\LastDayValidatorTest::testFindTheLastValidDayFromMonthMayAtNRW"/>
        <covered by="Test\PublicHolidayInspector\Validator\LastDayValidatorTest::testNotTheLastDayFromMonth"/>
        <covered by="Test\PublicHolidayInspector\Validator\LastDayValidatorTest::testSpecialCases"/>
      </line>
      <line nr="57">
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testFixPublicHolidayNewYear"/>
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testInvokeCreater"/>
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testFixPublicHolidayDoGU"/>
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testDynamicPublicHolidayDoPaRWithGermanState"/>
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testDynamicPublicHolidayDoPaRWithOutGermanState"/>
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testFixPublicHolidayMartinsDayWithOutAustriaState"/>
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testFixPublicHolidayMartinsDayWithAustriaState"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorWorkingDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorEasterSunday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorEasterMonday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorWhitSunday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorWhitMonday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorAscensionDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorCorpusChristi"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorThreeHolyKings"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorMaryAscension"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorAllSaintsDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorChristmasEve"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorFirstChristmansDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorSecondChristmansDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorMaryConception"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorNewYear"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorLeopoldiDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorMartinsDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorNationalHoliday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorStaatHoliday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorDayOfReferendum"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorRubert"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorFlorian"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorJosef"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testDateIsNull"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorWorkingDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorGoodFriday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorEasterSunday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorEasterMonday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorWhitSunday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorWhitMonday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorAscensionDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorCorpusChristi"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorLaborDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorChristmasEve"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorNewYear"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorThreeHolyKings"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorMaryAscension"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorDayOfGermanUnity"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorReformationDayOrHalloween"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorDayOfPrayerAndRepentance"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorFirstChristmansDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorSecondChristmansDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorNewYearsEve"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testDateIsNull"/>
        <covered by="Test\PublicHolidayInspector\Service\UltimoDayCalculatorServiceTest::testUltimoFebruaryNoLeapYear"/>
        <covered by="Test\PublicHolidayInspector\Service\UltimoDayCalculatorServiceTest::testUltimoFebruaryLeapYear"/>
        <covered by="Test\PublicHolidayInspector\Service\UltimoDayCalculatorServiceTest::testNoUltimoDayFromDecemberForAustria"/>
        <covered by="Test\PublicHolidayInspector\Service\UltimoDayCalculatorServiceTest::testTwoDaysForLastDayOfMonth"/>
        <covered by="Test\PublicHolidayInspector\Service\UltimoDayCalculatorServiceTest::testThreeDaysForLastDayOfMonthThrowsException"/>
        <covered by="Test\PublicHolidayInspector\Validator\LastDayValidatorTest::testDayIsWorkingDay"/>
        <covered by="Test\PublicHolidayInspector\Validator\LastDayValidatorTest::testDayIsNotWorkingDay"/>
        <covered by="Test\PublicHolidayInspector\Validator\LastDayValidatorTest::testFindTheLastValidDayFromMonth"/>
        <covered by="Test\PublicHolidayInspector\Validator\LastDayValidatorTest::testFindTheLastValidDayFromMonthMayAtNRW"/>
        <covered by="Test\PublicHolidayInspector\Validator\LastDayValidatorTest::testNotTheLastDayFromMonth"/>
        <covered by="Test\PublicHolidayInspector\Validator\LastDayValidatorTest::testSpecialCases"/>
      </line>
      <line nr="58">
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testFixPublicHolidayNewYear"/>
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testInvokeCreater"/>
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testFixPublicHolidayDoGU"/>
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testDynamicPublicHolidayDoPaRWithGermanState"/>
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testDynamicPublicHolidayDoPaRWithOutGermanState"/>
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testFixPublicHolidayMartinsDayWithOutAustriaState"/>
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testFixPublicHolidayMartinsDayWithAustriaState"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorWorkingDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorEasterSunday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorEasterMonday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorWhitSunday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorWhitMonday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorAscensionDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorCorpusChristi"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorThreeHolyKings"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorMaryAscension"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorAllSaintsDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorChristmasEve"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorFirstChristmansDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorSecondChristmansDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorMaryConception"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorNewYear"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorLeopoldiDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorMartinsDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorNationalHoliday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorStaatHoliday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorDayOfReferendum"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorRubert"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorFlorian"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorJosef"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testDateIsNull"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorWorkingDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorGoodFriday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorEasterSunday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorEasterMonday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorWhitSunday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorWhitMonday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorAscensionDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorCorpusChristi"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorLaborDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorChristmasEve"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorNewYear"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorThreeHolyKings"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorMaryAscension"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorDayOfGermanUnity"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorReformationDayOrHalloween"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorDayOfPrayerAndRepentance"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorFirstChristmansDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorSecondChristmansDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorNewYearsEve"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testDateIsNull"/>
        <covered by="Test\PublicHolidayInspector\Service\UltimoDayCalculatorServiceTest::testUltimoFebruaryNoLeapYear"/>
        <covered by="Test\PublicHolidayInspector\Service\UltimoDayCalculatorServiceTest::testUltimoFebruaryLeapYear"/>
        <covered by="Test\PublicHolidayInspector\Service\UltimoDayCalculatorServiceTest::testNoUltimoDayFromDecemberForAustria"/>
        <covered by="Test\PublicHolidayInspector\Service\UltimoDayCalculatorServiceTest::testTwoDaysForLastDayOfMonth"/>
        <covered by="Test\PublicHolidayInspector\Service\UltimoDayCalculatorServiceTest::testThreeDaysForLastDayOfMonthThrowsException"/>
        <covered by="Test\PublicHolidayInspector\Validator\LastDayValidatorTest::testDayIsWorkingDay"/>
        <covered by="Test\PublicHolidayInspector\Validator\LastDayValidatorTest::testDayIsNotWorkingDay"/>
        <covered by="Test\PublicHolidayInspector\Validator\LastDayValidatorTest::testFindTheLastValidDayFromMonth"/>
        <covered by="Test\PublicHolidayInspector\Validator\LastDayValidatorTest::testFindTheLastValidDayFromMonthMayAtNRW"/>
        <covered by="Test\PublicHolidayInspector\Validator\LastDayValidatorTest::testNotTheLastDayFromMonth"/>
        <covered by="Test\PublicHolidayInspector\Validator\LastDayValidatorTest::testSpecialCases"/>
      </line>
      <line nr="59">
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testFixPublicHolidayNewYear"/>
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testInvokeCreater"/>
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testFixPublicHolidayDoGU"/>
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testDynamicPublicHolidayDoPaRWithGermanState"/>
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testDynamicPublicHolidayDoPaRWithOutGermanState"/>
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testFixPublicHolidayMartinsDayWithOutAustriaState"/>
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testFixPublicHolidayMartinsDayWithAustriaState"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorWorkingDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorEasterSunday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorEasterMonday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorWhitSunday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorWhitMonday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorAscensionDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorCorpusChristi"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorThreeHolyKings"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorMaryAscension"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorAllSaintsDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorChristmasEve"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorFirstChristmansDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorSecondChristmansDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorMaryConception"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorNewYear"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorLeopoldiDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorMartinsDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorNationalHoliday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorStaatHoliday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorDayOfReferendum"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorRubert"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorFlorian"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorJosef"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testDateIsNull"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorWorkingDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorGoodFriday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorEasterSunday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorEasterMonday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorWhitSunday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorWhitMonday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorAscensionDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorCorpusChristi"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorLaborDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorChristmasEve"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorNewYear"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorThreeHolyKings"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorMaryAscension"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorDayOfGermanUnity"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorReformationDayOrHalloween"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorDayOfPrayerAndRepentance"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorFirstChristmansDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorSecondChristmansDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorNewYearsEve"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testDateIsNull"/>
        <covered by="Test\PublicHolidayInspector\Service\UltimoDayCalculatorServiceTest::testUltimoFebruaryNoLeapYear"/>
        <covered by="Test\PublicHolidayInspector\Service\UltimoDayCalculatorServiceTest::testUltimoFebruaryLeapYear"/>
        <covered by="Test\PublicHolidayInspector\Service\UltimoDayCalculatorServiceTest::testNoUltimoDayFromDecemberForAustria"/>
        <covered by="Test\PublicHolidayInspector\Service\UltimoDayCalculatorServiceTest::testTwoDaysForLastDayOfMonth"/>
        <covered by="Test\PublicHolidayInspector\Service\UltimoDayCalculatorServiceTest::testThreeDaysForLastDayOfMonthThrowsException"/>
        <covered by="Test\PublicHolidayInspector\Validator\LastDayValidatorTest::testDayIsWorkingDay"/>
        <covered by="Test\PublicHolidayInspector\Validator\LastDayValidatorTest::testDayIsNotWorkingDay"/>
        <covered by="Test\PublicHolidayInspector\Validator\LastDayValidatorTest::testFindTheLastValidDayFromMonth"/>
        <covered by="Test\PublicHolidayInspector\Validator\LastDayValidatorTest::testFindTheLastValidDayFromMonthMayAtNRW"/>
        <covered by="Test\PublicHolidayInspector\Validator\LastDayValidatorTest::testNotTheLastDayFromMonth"/>
        <covered by="Test\PublicHolidayInspector\Validator\LastDayValidatorTest::testSpecialCases"/>
      </line>
      <line nr="60">
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testFixPublicHolidayNewYear"/>
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testInvokeCreater"/>
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testFixPublicHolidayDoGU"/>
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testDynamicPublicHolidayDoPaRWithGermanState"/>
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testDynamicPublicHolidayDoPaRWithOutGermanState"/>
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testFixPublicHolidayMartinsDayWithOutAustriaState"/>
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testFixPublicHolidayMartinsDayWithAustriaState"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorWorkingDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorEasterSunday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorEasterMonday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorWhitSunday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorWhitMonday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorAscensionDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorCorpusChristi"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorThreeHolyKings"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorMaryAscension"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorAllSaintsDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorChristmasEve"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorFirstChristmansDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorSecondChristmansDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorMaryConception"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorNewYear"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorLeopoldiDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorMartinsDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorNationalHoliday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorStaatHoliday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorDayOfReferendum"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorRubert"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorFlorian"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorJosef"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testDateIsNull"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorWorkingDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorGoodFriday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorEasterSunday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorEasterMonday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorWhitSunday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorWhitMonday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorAscensionDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorCorpusChristi"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorLaborDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorChristmasEve"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorNewYear"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorThreeHolyKings"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorMaryAscension"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorDayOfGermanUnity"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorReformationDayOrHalloween"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorDayOfPrayerAndRepentance"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorFirstChristmansDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorSecondChristmansDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorNewYearsEve"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testDateIsNull"/>
        <covered by="Test\PublicHolidayInspector\Service\UltimoDayCalculatorServiceTest::testUltimoFebruaryNoLeapYear"/>
        <covered by="Test\PublicHolidayInspector\Service\UltimoDayCalculatorServiceTest::testUltimoFebruaryLeapYear"/>
        <covered by="Test\PublicHolidayInspector\Service\UltimoDayCalculatorServiceTest::testNoUltimoDayFromDecemberForAustria"/>
        <covered by="Test\PublicHolidayInspector\Service\UltimoDayCalculatorServiceTest::testTwoDaysForLastDayOfMonth"/>
        <covered by="Test\PublicHolidayInspector\Service\UltimoDayCalculatorServiceTest::testThreeDaysForLastDayOfMonthThrowsException"/>
        <covered by="Test\PublicHolidayInspector\Validator\LastDayValidatorTest::testDayIsWorkingDay"/>
        <covered by="Test\PublicHolidayInspector\Validator\LastDayValidatorTest::testDayIsNotWorkingDay"/>
        <covered by="Test\PublicHolidayInspector\Validator\LastDayValidatorTest::testFindTheLastValidDayFromMonth"/>
        <covered by="Test\PublicHolidayInspector\Validator\LastDayValidatorTest::testFindTheLastValidDayFromMonthMayAtNRW"/>
        <covered by="Test\PublicHolidayInspector\Validator\LastDayValidatorTest::testNotTheLastDayFromMonth"/>
        <covered by="Test\PublicHolidayInspector\Validator\LastDayValidatorTest::testSpecialCases"/>
      </line>
      <line nr="61">
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testFixPublicHolidayNewYear"/>
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testInvokeCreater"/>
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testFixPublicHolidayDoGU"/>
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testDynamicPublicHolidayDoPaRWithGermanState"/>
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testDynamicPublicHolidayDoPaRWithOutGermanState"/>
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testFixPublicHolidayMartinsDayWithOutAustriaState"/>
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testFixPublicHolidayMartinsDayWithAustriaState"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorWorkingDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorEasterSunday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorEasterMonday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorWhitSunday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorWhitMonday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorAscensionDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorCorpusChristi"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorThreeHolyKings"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorMaryAscension"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorAllSaintsDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorChristmasEve"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorFirstChristmansDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorSecondChristmansDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorMaryConception"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorNewYear"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorLeopoldiDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorMartinsDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorNationalHoliday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorStaatHoliday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorDayOfReferendum"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorRubert"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorFlorian"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorJosef"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testDateIsNull"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorWorkingDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorGoodFriday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorEasterSunday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorEasterMonday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorWhitSunday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorWhitMonday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorAscensionDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorCorpusChristi"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorLaborDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorChristmasEve"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorNewYear"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorThreeHolyKings"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorMaryAscension"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorDayOfGermanUnity"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorReformationDayOrHalloween"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorDayOfPrayerAndRepentance"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorFirstChristmansDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorSecondChristmansDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorNewYearsEve"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testDateIsNull"/>
        <covered by="Test\PublicHolidayInspector\Service\UltimoDayCalculatorServiceTest::testUltimoFebruaryNoLeapYear"/>
        <covered by="Test\PublicHolidayInspector\Service\UltimoDayCalculatorServiceTest::testUltimoFebruaryLeapYear"/>
        <covered by="Test\PublicHolidayInspector\Service\UltimoDayCalculatorServiceTest::testNoUltimoDayFromDecemberForAustria"/>
        <covered by="Test\PublicHolidayInspector\Service\UltimoDayCalculatorServiceTest::testTwoDaysForLastDayOfMonth"/>
        <covered by="Test\PublicHolidayInspector\Service\UltimoDayCalculatorServiceTest::testThreeDaysForLastDayOfMonthThrowsException"/>
        <covered by="Test\PublicHolidayInspector\Validator\LastDayValidatorTest::testDayIsWorkingDay"/>
        <covered by="Test\PublicHolidayInspector\Validator\LastDayValidatorTest::testDayIsNotWorkingDay"/>
        <covered by="Test\PublicHolidayInspector\Validator\LastDayValidatorTest::testFindTheLastValidDayFromMonth"/>
        <covered by="Test\PublicHolidayInspector\Validator\LastDayValidatorTest::testFindTheLastValidDayFromMonthMayAtNRW"/>
        <covered by="Test\PublicHolidayInspector\Validator\LastDayValidatorTest::testNotTheLastDayFromMonth"/>
        <covered by="Test\PublicHolidayInspector\Validator\LastDayValidatorTest::testSpecialCases"/>
      </line>
      <line nr="62">
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testFixPublicHolidayNewYear"/>
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testInvokeCreater"/>
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testFixPublicHolidayDoGU"/>
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testDynamicPublicHolidayDoPaRWithGermanState"/>
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testDynamicPublicHolidayDoPaRWithOutGermanState"/>
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testFixPublicHolidayMartinsDayWithOutAustriaState"/>
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testFixPublicHolidayMartinsDayWithAustriaState"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorWorkingDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorEasterSunday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorEasterMonday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorWhitSunday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorWhitMonday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorAscensionDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorCorpusChristi"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorThreeHolyKings"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorMaryAscension"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorAllSaintsDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorChristmasEve"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorFirstChristmansDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorSecondChristmansDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorMaryConception"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorNewYear"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorLeopoldiDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorMartinsDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorNationalHoliday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorStaatHoliday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorDayOfReferendum"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorRubert"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorFlorian"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorJosef"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testDateIsNull"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorWorkingDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorGoodFriday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorEasterSunday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorEasterMonday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorWhitSunday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorWhitMonday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorAscensionDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorCorpusChristi"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorLaborDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorChristmasEve"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorNewYear"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorThreeHolyKings"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorMaryAscension"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorDayOfGermanUnity"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorReformationDayOrHalloween"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorDayOfPrayerAndRepentance"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorFirstChristmansDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorSecondChristmansDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorNewYearsEve"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testDateIsNull"/>
        <covered by="Test\PublicHolidayInspector\Service\UltimoDayCalculatorServiceTest::testUltimoFebruaryNoLeapYear"/>
        <covered by="Test\PublicHolidayInspector\Service\UltimoDayCalculatorServiceTest::testUltimoFebruaryLeapYear"/>
        <covered by="Test\PublicHolidayInspector\Service\UltimoDayCalculatorServiceTest::testNoUltimoDayFromDecemberForAustria"/>
        <covered by="Test\PublicHolidayInspector\Service\UltimoDayCalculatorServiceTest::testTwoDaysForLastDayOfMonth"/>
        <covered by="Test\PublicHolidayInspector\Service\UltimoDayCalculatorServiceTest::testThreeDaysForLastDayOfMonthThrowsException"/>
        <covered by="Test\PublicHolidayInspector\Validator\LastDayValidatorTest::testDayIsWorkingDay"/>
        <covered by="Test\PublicHolidayInspector\Validator\LastDayValidatorTest::testDayIsNotWorkingDay"/>
        <covered by="Test\PublicHolidayInspector\Validator\LastDayValidatorTest::testFindTheLastValidDayFromMonth"/>
        <covered by="Test\PublicHolidayInspector\Validator\LastDayValidatorTest::testFindTheLastValidDayFromMonthMayAtNRW"/>
        <covered by="Test\PublicHolidayInspector\Validator\LastDayValidatorTest::testNotTheLastDayFromMonth"/>
        <covered by="Test\PublicHolidayInspector\Validator\LastDayValidatorTest::testSpecialCases"/>
      </line>
      <line nr="73">
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testFixPublicHolidayNewYear"/>
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testInvokeCreater"/>
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testFixPublicHolidayDoGU"/>
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testDynamicPublicHolidayDoPaRWithGermanState"/>
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testDynamicPublicHolidayDoPaRWithOutGermanState"/>
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testFixPublicHolidayMartinsDayWithOutAustriaState"/>
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testFixPublicHolidayMartinsDayWithAustriaState"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorWorkingDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorEasterSunday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorEasterMonday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorWhitSunday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorWhitMonday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorAscensionDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorCorpusChristi"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorThreeHolyKings"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorMaryAscension"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorAllSaintsDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorChristmasEve"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorFirstChristmansDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorSecondChristmansDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorMaryConception"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorNewYear"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorLeopoldiDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorMartinsDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorNationalHoliday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorStaatHoliday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorDayOfReferendum"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorRubert"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorFlorian"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorJosef"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testDateIsNull"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorWorkingDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorGoodFriday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorEasterSunday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorEasterMonday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorWhitSunday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorWhitMonday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorAscensionDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorCorpusChristi"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorLaborDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorChristmasEve"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorNewYear"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorThreeHolyKings"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorMaryAscension"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorDayOfGermanUnity"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorReformationDayOrHalloween"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorDayOfPrayerAndRepentance"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorFirstChristmansDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorSecondChristmansDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorNewYearsEve"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testDateIsNull"/>
        <covered by="Test\PublicHolidayInspector\Service\UltimoDayCalculatorServiceTest::testUltimoFebruaryNoLeapYear"/>
        <covered by="Test\PublicHolidayInspector\Service\UltimoDayCalculatorServiceTest::testUltimoFebruaryLeapYear"/>
        <covered by="Test\PublicHolidayInspector\Service\UltimoDayCalculatorServiceTest::testNoUltimoDayFromDecemberForAustria"/>
        <covered by="Test\PublicHolidayInspector\Service\UltimoDayCalculatorServiceTest::testTwoDaysForLastDayOfMonth"/>
        <covered by="Test\PublicHolidayInspector\Service\UltimoDayCalculatorServiceTest::testThreeDaysForLastDayOfMonthThrowsException"/>
        <covered by="Test\PublicHolidayInspector\Validator\LastDayValidatorTest::testDayIsWorkingDay"/>
        <covered by="Test\PublicHolidayInspector\Validator\LastDayValidatorTest::testDayIsNotWorkingDay"/>
        <covered by="Test\PublicHolidayInspector\Validator\LastDayValidatorTest::testFindTheLastValidDayFromMonth"/>
        <covered by="Test\PublicHolidayInspector\Validator\LastDayValidatorTest::testFindTheLastValidDayFromMonthMayAtNRW"/>
        <covered by="Test\PublicHolidayInspector\Validator\LastDayValidatorTest::testNotTheLastDayFromMonth"/>
        <covered by="Test\PublicHolidayInspector\Validator\LastDayValidatorTest::testSpecialCases"/>
      </line>
      <line nr="81">
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testFixPublicHolidayNewYear"/>
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testInvokeCreater"/>
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testFixPublicHolidayDoGU"/>
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testDynamicPublicHolidayDoPaRWithGermanState"/>
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testDynamicPublicHolidayDoPaRWithOutGermanState"/>
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testFixPublicHolidayMartinsDayWithOutAustriaState"/>
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testFixPublicHolidayMartinsDayWithAustriaState"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorEasterSunday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorEasterMonday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorWhitSunday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorWhitMonday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorAscensionDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorCorpusChristi"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorThreeHolyKings"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorMaryAscension"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorAllSaintsDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorChristmasEve"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorFirstChristmansDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorSecondChristmansDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorMaryConception"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorNewYear"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorLeopoldiDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorMartinsDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorNationalHoliday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorStaatHoliday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorDayOfReferendum"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorRubert"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorFlorian"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorJosef"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorGoodFriday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorEasterSunday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorEasterMonday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorWhitSunday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorWhitMonday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorAscensionDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorCorpusChristi"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorLaborDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorChristmasEve"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorNewYear"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorThreeHolyKings"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorMaryAscension"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorDayOfGermanUnity"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorReformationDayOrHalloween"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorAllSaintsDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorDayOfPrayerAndRepentance"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorFirstChristmansDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorSecondChristmansDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorNewYearsEve"/>
        <covered by="Test\PublicHolidayInspector\Service\UltimoDayCalculatorServiceTest::testThreeDaysForLastDayOfMonthThrowsException"/>
        <covered by="Test\PublicHolidayInspector\Validator\LastDayValidatorTest::testDayIsWorkingDay"/>
        <covered by="Test\PublicHolidayInspector\Validator\LastDayValidatorTest::testFindTheLastValidDayFromMonth"/>
        <covered by="Test\PublicHolidayInspector\Validator\LastDayValidatorTest::testFindTheLastValidDayFromMonthMayAtNRW"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2">
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="3">
        <token name="T_DOC_COMMENT"> * Copyright (c) 2019.</token>
      </line>
      <line no="4">
        <token name="T_DOC_COMMENT"> * Created By</token>
      </line>
      <line no="5">
        <token name="T_DOC_COMMENT"> * @author    Mike Hartl</token>
      </line>
      <line no="6">
        <token name="T_DOC_COMMENT"> * @copyright 2019  Mike Hartl All rights reserved</token>
      </line>
      <line no="7">
        <token name="T_DOC_COMMENT"> * @license   The source code of this document is proprietary work, and is not licensed for distribution or use.</token>
      </line>
      <line no="8">
        <token name="T_DOC_COMMENT"> * @created   25.12.2019</token>
      </line>
      <line no="9">
        <token name="T_DOC_COMMENT"> * @version   0.0.1</token>
      </line>
      <line no="10">
        <token name="T_DOC_COMMENT"> */</token>
      </line>
      <line no="11"/>
      <line no="12">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">PublicHolidayInspector</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Day</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="13"/>
      <line no="14"/>
      <line no="15">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">PublicHolidayInspector</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Interfaces</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">De</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">PublicHolidaysConstantsInterface</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="16"/>
      <line no="17">
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="18">
        <token name="T_DOC_COMMENT"> * Class Easter</token>
      </line>
      <line no="19">
        <token name="T_DOC_COMMENT"> * @package PublicHolidayInspector\Day</token>
      </line>
      <line no="20">
        <token name="T_DOC_COMMENT"> */</token>
      </line>
      <line no="21">
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">EasterSunday</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IMPLEMENTS">implements</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Holiday</token>
      </line>
      <line no="22">
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="23">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CONST">const</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">DAY_NAME</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">PublicHolidaysConstantsInterface</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">PUBLIC_HOLIDAY_NAME_EASTER_SUNDAY</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="24"/>
      <line no="25">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CONST">const</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">DAY_MONTH_FORMAT</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'d.m'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="26">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CONST">const</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">DAY_FACTOR</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="27"/>
      <line no="28">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/** @var string */</token>
      </line>
      <line no="29">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$easterDay</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="30"/>
      <line no="31">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/** @var string */</token>
      </line>
      <line no="32">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$easterMonth</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="33"/>
      <line no="34">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/** @var string */</token>
      </line>
      <line no="35">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$easterYear</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="36"/>
      <line no="37">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="38">
        <token name="T_DOC_COMMENT">     * Easter constructor.</token>
      </line>
      <line no="39">
        <token name="T_DOC_COMMENT">     * @param \DateTime $date</token>
      </line>
      <line no="40">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="41">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">__construct</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">DateTime</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$date</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="42">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="43">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">easterYear</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$date</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">format</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Y'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="44">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">easterDay</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">date</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"d"</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">easter_date</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">easterYear</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="45">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">easterMonth</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">date</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"m"</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">easter_date</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">easterYear</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="46">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="47"/>
      <line no="48">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="49">
        <token name="T_DOC_COMMENT">     * @param int $factor</token>
      </line>
      <line no="50">
        <token name="T_DOC_COMMENT">     * @return false|string</token>
      </line>
      <line no="51">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="52">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getDay</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">int</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$factor</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="53">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="54">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">date</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="55">
        <token name="T_WHITESPACE">            </token>
        <token name="T_STRING">self</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">DAY_MONTH_FORMAT</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="56">
        <token name="T_WHITESPACE">            </token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">mktime</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="57">
        <token name="T_WHITESPACE">                </token>
        <token name="T_STRING">self</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">DEFAULT_HOUR</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="58">
        <token name="T_WHITESPACE">                </token>
        <token name="T_STRING">self</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">DEFAULT_MINUTE</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="59">
        <token name="T_WHITESPACE">                </token>
        <token name="T_STRING">self</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">DEFAULT_SECOND</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="60">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">easterMonth</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="61">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">easterDay</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_PLUS">+</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$factor</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="62">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">easterYear</token>
      </line>
      <line no="63">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="64">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="65">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="66"/>
      <line no="67">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="68">
        <token name="T_DOC_COMMENT">     * @param string $changeDate</token>
      </line>
      <line no="69">
        <token name="T_DOC_COMMENT">     * @return boolean</token>
      </line>
      <line no="70">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="71">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">equals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$changeDate</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="72">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="73">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$changeDate</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_EQUAL">==</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getDay</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STATIC">static</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">DAY_FACTOR</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="74">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="75"/>
      <line no="76">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="77">
        <token name="T_DOC_COMMENT">     * @return string</token>
      </line>
      <line no="78">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="79">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">__toString</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="80">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="81">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STATIC">static</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">DAY_NAME</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="82">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="83"/>
      <line no="84">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
    </source>
  </file>
</phpunit>
