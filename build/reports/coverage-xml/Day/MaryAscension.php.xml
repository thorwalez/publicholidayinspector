<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="MaryAscension.php" path="/Day">
    <totals>
      <lines total="35" comments="19" code="16" executable="1" executed="1" percent="100.00"/>
      <methods count="1" tested="1" percent="100.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="1" percent="100.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="PublicHolidayInspector\Day\MaryAscension" start="22" executable="1" executed="1" crap="1">
      <package full="PublicHolidayInspector" name="PublicHolidayInspector" sub="" category=""/>
      <namespace name="PublicHolidayInspector\Day"/>
      <method name="equals" signature="equals($changeDate)" start="32" end="35" crap="1" executable="1" executed="1" coverage="100"/>
    </class>
    <coverage>
      <line nr="34">
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testFixPublicHolidayNewYear"/>
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testInvokeCreater"/>
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testFixPublicHolidayMartinsDayWithOutAustriaState"/>
        <covered by="Test\PublicHolidayInspector\Service\PublicHolidayCalculatorServiceTest::testFixPublicHolidayMartinsDayWithAustriaState"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorWorkingDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorMaryAscension"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorAllSaintsDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorChristmasEve"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorFirstChristmansDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorSecondChristmansDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorMaryConception"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorNewYear"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorLeopoldiDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorMartinsDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorNationalHoliday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorStaatHoliday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorDayOfReferendum"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorRubert"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorFlorian"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testCalculatorJosef"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\AustriaPublicHolidayCalculatorServiceTest::testDateIsNull"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorWorkingDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorWhitSunday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testNewHolidyCalculatorWhitMonday"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorNewYear"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorThreeHolyKings"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorMaryAscension"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorReformationDayOrHalloween"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorSecondChristmansDay"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testCalculatorNewYearsEve"/>
        <covered by="Test\PublicHolidayInspector\Service\Strategy\GermanPublicHolidayCalculatorServiceTest::testDateIsNull"/>
        <covered by="Test\PublicHolidayInspector\Service\UltimoDayCalculatorServiceTest::testUltimoFebruaryNoLeapYear"/>
        <covered by="Test\PublicHolidayInspector\Service\UltimoDayCalculatorServiceTest::testUltimoFebruaryLeapYear"/>
        <covered by="Test\PublicHolidayInspector\Service\UltimoDayCalculatorServiceTest::testNoUltimoDayFromDecemberForAustria"/>
        <covered by="Test\PublicHolidayInspector\Service\UltimoDayCalculatorServiceTest::testTwoDaysForLastDayOfMonth"/>
        <covered by="Test\PublicHolidayInspector\Service\UltimoDayCalculatorServiceTest::testThreeDaysForLastDayOfMonthThrowsException"/>
        <covered by="Test\PublicHolidayInspector\Validator\LastDayValidatorTest::testDayIsWorkingDay"/>
        <covered by="Test\PublicHolidayInspector\Validator\LastDayValidatorTest::testDayIsNotWorkingDay"/>
        <covered by="Test\PublicHolidayInspector\Validator\LastDayValidatorTest::testFindTheLastValidDayFromMonth"/>
        <covered by="Test\PublicHolidayInspector\Validator\LastDayValidatorTest::testFindTheLastValidDayFromMonthMayAtNRW"/>
        <covered by="Test\PublicHolidayInspector\Validator\LastDayValidatorTest::testNotTheLastDayFromMonth"/>
        <covered by="Test\PublicHolidayInspector\Validator\LastDayValidatorTest::testSpecialCases"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2">
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="3">
        <token name="T_DOC_COMMENT"> * Copyright (c) 2019.</token>
      </line>
      <line no="4">
        <token name="T_DOC_COMMENT"> *</token>
      </line>
      <line no="5">
        <token name="T_DOC_COMMENT"> * Created By</token>
      </line>
      <line no="6">
        <token name="T_DOC_COMMENT"> * @author Mike Hartl</token>
      </line>
      <line no="7">
        <token name="T_DOC_COMMENT"> * @copyright 2019  Mike Hartl All rights reserved</token>
      </line>
      <line no="8">
        <token name="T_DOC_COMMENT"> * @license  The source code of this document is proprietary work, and is not licensed for distribution or use.</token>
      </line>
      <line no="9">
        <token name="T_DOC_COMMENT"> * @created 25.12.2019</token>
      </line>
      <line no="10">
        <token name="T_DOC_COMMENT"> * @version 0.0.1</token>
      </line>
      <line no="11">
        <token name="T_DOC_COMMENT"> *</token>
      </line>
      <line no="12">
        <token name="T_DOC_COMMENT"> */</token>
      </line>
      <line no="13"/>
      <line no="14">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">PublicHolidayInspector</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Day</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="15"/>
      <line no="16">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">PublicHolidayInspector</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Interfaces</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">De</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">PublicHolidaysConstantsInterface</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="17"/>
      <line no="18">
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="19">
        <token name="T_DOC_COMMENT"> * Class MaryAscension</token>
      </line>
      <line no="20">
        <token name="T_DOC_COMMENT"> * @package PublicHolidayInspector\Day</token>
      </line>
      <line no="21">
        <token name="T_DOC_COMMENT"> */</token>
      </line>
      <line no="22">
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">MaryAscension</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXTENDS">extends</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">EasterSunday</token>
      </line>
      <line no="23">
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="24">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CONST">const</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">FIX_PUBLIC_HOLIDAY_MARY_ASCENSION</token>
        <token name="T_WHITESPACE">      </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'15.08'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="25"/>
      <line no="26">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CONST">const</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">DAY_NAME</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">PublicHolidaysConstantsInterface</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">PUBLIC_HOLIDAY_NAME_MARY_ASCENSION</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="27"/>
      <line no="28">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="29">
        <token name="T_DOC_COMMENT">     * @param string $changeDate</token>
      </line>
      <line no="30">
        <token name="T_DOC_COMMENT">     * @return bool</token>
      </line>
      <line no="31">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="32">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">equals</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$changeDate</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="33">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="34">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$changeDate</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_EQUAL">==</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">self</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">FIX_PUBLIC_HOLIDAY_MARY_ASCENSION</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="35">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="36">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
    </source>
  </file>
</phpunit>
